
package View;
import Controller.ControllerUtilizator;
import Services.Conexiune;
import Services.ManagerTabele;
import java.sql.Connection;
import java.sql.ResultSet;
import java.sql.Statement;
import java.sql.ResultSetMetaData;
import java.util.Vector;
import javax.swing.table.DefaultTableModel;

public class FereastraNormalizari extends javax.swing.JFrame {
    private final ControllerUtilizator controller;
    private ManagerTabele managerTabele;
    private Conexiune conexiune;
    /**
     * Creates new form FereastraNormalizari
     */
    public FereastraNormalizari(ControllerUtilizator controller) {
        initComponents();
        this.controller = controller;
        managerTabele = ManagerTabele.getInstance();
        conexiune = Conexiune.getInstance();
        jComboBoxTabele.setModel(new javax.swing.JComboBox<String>(managerTabele.cautaToateTabelele()).getModel());
        jLabelNumeTabel.setText("Date tabel " + jComboBoxTabele.getItemAt(0) + ":");
        afiseazaDateTabel(jComboBoxTabele.getItemAt(0));
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        bNormalizareConstrangeriExistenta = new javax.swing.JButton();
        bNormalizareCheiPrimare = new javax.swing.JButton();
        bNormalizareCheiSemantice = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jLabelNumeTabel = new javax.swing.JLabel();
        jComboBoxTabele = new javax.swing.JComboBox<>();
        jLabelSelectareTabel = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("FereastraNormalizari");

        bNormalizareConstrangeriExistenta.setText("Normalizare constrageri de existenta");
        bNormalizareConstrangeriExistenta.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bNormalizareConstrangeriExistentaActionPerformed(evt);
            }
        });

        bNormalizareCheiPrimare.setText("Normalizare chei primare");
        bNormalizareCheiPrimare.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bNormalizareCheiPrimareActionPerformed(evt);
            }
        });

        bNormalizareCheiSemantice.setText("Normalizare chei semantice");
        bNormalizareCheiSemantice.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bNormalizareCheiSemanticeActionPerformed(evt);
            }
        });

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(jTable1);

        jLabelNumeTabel.setText("Date tabel 'NumeTabel'");

        jComboBoxTabele.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        jComboBoxTabele.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                jComboBoxTabeleItemStateChanged(evt);
            }
        });

        jLabelSelectareTabel.setText("Selectare Tabel");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(23, 23, 23)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(bNormalizareConstrangeriExistenta)
                        .addGap(46, 46, 46)
                        .addComponent(bNormalizareCheiPrimare)
                        .addGap(50, 50, 50)
                        .addComponent(bNormalizareCheiSemantice))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabelNumeTabel))
                        .addGap(50, 50, 50)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabelSelectareTabel)
                            .addComponent(jComboBoxTabele, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(200, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(24, 24, 24)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(bNormalizareConstrangeriExistenta)
                    .addComponent(bNormalizareCheiPrimare)
                    .addComponent(bNormalizareCheiSemantice))
                .addGap(30, 30, 30)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabelNumeTabel, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabelSelectareTabel))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 321, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jComboBoxTabele, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(65, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void bNormalizareConstrangeriExistentaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bNormalizareConstrangeriExistentaActionPerformed
        controller.normalizareConstrangeriExistenta();
    }//GEN-LAST:event_bNormalizareConstrangeriExistentaActionPerformed

    private void bNormalizareCheiPrimareActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bNormalizareCheiPrimareActionPerformed
        controller.normalizareCheiePrimara();
    }//GEN-LAST:event_bNormalizareCheiPrimareActionPerformed

    private void bNormalizareCheiSemanticeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bNormalizareCheiSemanticeActionPerformed
        controller.normalizareCheieSemantica();
    }//GEN-LAST:event_bNormalizareCheiSemanticeActionPerformed

    private void jComboBoxTabeleItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_jComboBoxTabeleItemStateChanged
        jLabelNumeTabel.setText("Date tabel " + jComboBoxTabele.getSelectedItem() + ":");
        afiseazaDateTabel(jComboBoxTabele.getSelectedItem().toString());
    }//GEN-LAST:event_jComboBoxTabeleItemStateChanged

    public void afiseazaDateTabel(String tabel){
        String[] coloane = managerTabele.cautaToateColoanele(tabel);
        DefaultTableModel model = new DefaultTableModel() {

            @Override
            public boolean isCellEditable(int row, int column) {
                //all cells false
                return false;
            }
        };
        model.setColumnIdentifiers(coloane);
        int nrCol = 0;
        String sql = "Select ";
        for(int i = 0; i < coloane.length - 1;i++)
            sql = sql + coloane[i] + ',';
        sql = sql + coloane[coloane.length-1] + " from " + tabel;
        
        try(Connection connection = conexiune.getConnection();
            Statement statement = connection.createStatement();
            ResultSet resultSet = statement.executeQuery(sql);){
            
            ResultSetMetaData metaData = resultSet.getMetaData();
            nrCol = metaData.getColumnCount();
            
            while (resultSet.next()) {
                Vector row = new Vector();
                for(int i = 1; i <= nrCol;i++){
                    row.addElement(resultSet.getString(i));
                }
                model.addRow(row);
            }
            jTable1.setModel(model);
            jTable1.updateUI();
        } catch (Exception e) {
            e.printStackTrace();
        }
        
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton bNormalizareCheiPrimare;
    private javax.swing.JButton bNormalizareCheiSemantice;
    private javax.swing.JButton bNormalizareConstrangeriExistenta;
    private javax.swing.JComboBox<String> jComboBoxTabele;
    private javax.swing.JLabel jLabelNumeTabel;
    private javax.swing.JLabel jLabelSelectareTabel;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable1;
    // End of variables declaration//GEN-END:variables
    
    public void afiseaza() {
        this.setVisible(true);
    }
}
